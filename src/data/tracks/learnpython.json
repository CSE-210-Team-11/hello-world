{
	"name": "Python For Everybody",
	"modules": [
		{
			"id": 1,
			"name": "Getting Started",
			"description": "Learn to install an IDE and the basic syntax.",
			"tasks": [
				{
					"taskId": 1,
					"name": "Python Installation & Setup",
					"subtasks": [
						"Install Python",
						"Setup IDE (PyCharm/VS Code)",
						"Install pip package manager",
						"Create virtual environments",
						"Basic command line usage",
						"Running Python scripts"
					]
				},
				{
					"taskId": 2,
					"name": "First Steps",
					"subtasks": [
						"Hello World program",
						"Python interactive shell",
						"Basic syntax rules",
						"Indentation importance",
						"Comments and documentation",
						"Print statements"
					]
				}
			]
		},
		{
			"id": 2,
			"name": "Python Basics",
			"description": "Learn about variables and basic math operations.",
			"tasks": [
				{
					"taskId": 1,
					"name": "Variables & Data Types",
					"subtasks": [
						"Numbers (int, float)",
						"Strings and string methods",
						"Booleans",
						"Lists and list operations",
						"Tuples",
						"Dictionaries",
						"Sets",
						"Type conversion",
						"Variable naming rules"
					]
				},
				{
					"taskId": 2,
					"name": "Basic Operations",
					"subtasks": [
						"Arithmetic operators",
						"Assignment operators",
						"Comparison operators",
						"Logical operators",
						"Identity operators (is, is not)",
						"Membership operators (in, not in)",
						"Bitwise operators"
					]
				}
			]
		},
		{
			"id": 3,
			"name": "Control Flow",
			"tasks": [
				{
					"taskId": 1,
					"name": "Conditional Statements",
					"subtasks": [
						"if statements",
						"if-else statements",
						"elif statements",
						"Nested conditionals",
						"Conditional expressions (ternary)",
						"Truth value testing"
					]
				},
				{
					"taskId": 2,
					"name": "Loops",
					"subtasks": [
						"for loops",
						"while loops",
						"Nested loops",
						"Loop control (break, continue)",
						"range() function",
						"enumerate() function",
						"List comprehensions",
						"Dictionary comprehensions"
					]
				}
			]
		},
		{
			"id": 4,
			"name": "Functions",
			"tasks": [
				{
					"taskId": 1,
					"name": "Function Basics",
					"subtasks": [
						"Function definition",
						"Function parameters",
						"Return statements",
						"Default parameters",
						"Keyword arguments",
						"Variable-length arguments (*args)",
						"Keyword variable-length arguments (**kwargs)",
						"Lambda functions",
						"Function documentation"
					]
				},
				{
					"taskId": 2,
					"name": "Built-in Functions",
					"subtasks": [
						"map()",
						"filter()",
						"reduce()",
						"zip()",
						"sorted()",
						"any() and all()",
						"sum(), min(), max()"
					]
				}
			]
		},
		{
			"id": 5,
			"name": "Data Structures",
			"tasks": [
				{
					"taskId": 1,
					"name": "Lists in Depth",
					"subtasks": [
						"List creation and access",
						"List methods",
						"Slicing operations",
						"Copying lists",
						"Nested lists",
						"List sorting",
						"List as stack/queue"
					]
				},
				{
					"taskId": 2,
					"name": "Dictionaries in Depth",
					"subtasks": [
						"Dictionary creation",
						"Accessing/modifying elements",
						"Dictionary methods",
						"Nested dictionaries",
						"Dictionary comprehensions",
						"Default dictionaries"
					]
				},
				{
					"taskId": 3,
					"name": "Advanced Collections",
					"subtasks": [
						"Counter",
						"DefaultDict",
						"OrderedDict",
						"NamedTuple",
						"Deque",
						"ChainMap"
					]
				}
			]
		},
		{
			"id": 6,
			"name": "Object-Oriented Programming",
			"tasks": [
				{
					"taskId": 1,
					"name": "Classes and Objects",
					"subtasks": [
						"Class definition",
						"Object creation",
						"Constructors (__init__)",
						"Instance attributes",
						"Class attributes",
						"Instance methods",
						"Class methods",
						"Static methods",
						"Property decorators"
					]
				},
				{
					"taskId": 2,
					"name": "OOP Concepts",
					"subtasks": [
						"Inheritance",
						"Multiple inheritance",
						"Method overriding",
						"Super() function",
						"Encapsulation",
						"Polymorphism",
						"Abstract classes",
						"Interface implementation"
					]
				}
			]
		},
		{
			"id": 7,
			"name": "File Handling & Exceptions",
			"tasks": [
				{
					"taskId": 1,
					"name": "File Operations",
					"subtasks": [
						"Opening/closing files",
						"Reading files",
						"Writing to files",
						"File modes",
						"With statement",
						"File object methods",
						"Working with CSV files",
						"JSON file handling"
					]
				},
				{
					"taskId": 2,
					"name": "Exception Handling",
					"subtasks": [
						"Try-except blocks",
						"Multiple except blocks",
						"else clause",
						"finally clause",
						"Raising exceptions",
						"Custom exceptions",
						"Exception hierarchy",
						"Context managers"
					]
				}
			]
		},
		{
			"id": 8,
			"name": "Modules & Packages",
			"tasks": [
				{
					"taskId": 1,
					"name": "Module Basics",
					"subtasks": [
						"Import statements",
						"Module creation",
						"Module search path",
						"Reload modules",
						"Package creation",
						"Package initialization",
						"__name__ variable"
					]
				},
				{
					"taskId": 2,
					"name": "Essential Libraries",
					"subtasks": [
						"datetime",
						"math",
						"random",
						"os",
						"sys",
						"re (regex)",
						"pathlib",
						"collections"
					]
				}
			]
		},
		{
			"id": 9,
			"name": "Python Standard Library",
			"tasks": [
				{
					"taskId": 1,
					"name": "String Processing",
					"subtasks": [
						"String methods",
						"Regular expressions",
						"Text processing",
						"String formatting",
						"Template strings"
					]
				},
				{
					"taskId": 2,
					"name": "Data Processing",
					"subtasks": [
						"CSV module",
						"JSON module",
						"XML processing",
						"Database connections",
						"Data serialization"
					]
				}
			]
		},
		{
			"id": 10,
			"name": "Advanced Topics",
			"tasks": [
				{
					"taskId": 1,
					"name": "Decorators",
					"subtasks": [
						"Function decorators",
						"Class decorators",
						"Multiple decorators",
						"Decorator with arguments",
						"Wrapping functions"
					]
				},
				{
					"taskId": 2,
					"name": "Generators",
					"subtasks": [
						"Generator functions",
						"Generator expressions",
						"yield statement",
						"Generator delegation",
						"Infinite sequences"
					]
				},
				{
					"taskId": 3,
					"name": "Context Managers",
					"subtasks": [
						"with statement",
						"Context manager protocol",
						"contextlib module",
						"Nested context managers"
					]
				}
			]
		}
	]
}
